<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wangxiansen15.github.io</id>
    <title>王先森想要更充实一点</title>
    <updated>2020-04-13T15:00:34.061Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wangxiansen15.github.io"/>
    <link rel="self" href="https://wangxiansen15.github.io/atom.xml"/>
    <subtitle>岁月悠悠,，衰微只及肌肤；
热忱抛弃，颓废必至灵魂。</subtitle>
    <logo>https://wangxiansen15.github.io/images/avatar.png</logo>
    <icon>https://wangxiansen15.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 王先森想要更充实一点</rights>
    <entry>
        <title type="html"><![CDATA[Boolean() Number() 的转换规则]]></title>
        <id>https://wangxiansen15.github.io/post/boolean-number-de-zhuan-huan-gui-ze/</id>
        <link href="https://wangxiansen15.github.io/post/boolean-number-de-zhuan-huan-gui-ze/">
        </link>
        <updated>2020-04-13T13:41:32.000Z</updated>
        <content type="html"><![CDATA[<h2 id="boolean">Boolean()</h2>
<table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th style="text-align:center">转化为true的值</th>
<th style="text-align:center">转化为false的值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Boolean</td>
<td style="text-align:center">true</td>
<td style="text-align:center">false</td>
</tr>
<tr>
<td style="text-align:center">Number</td>
<td style="text-align:center">任何非零的数字，包括Infinity 与-Infinity</td>
<td style="text-align:center">0,-0,NaN</td>
</tr>
<tr>
<td style="text-align:center">undefined</td>
<td style="text-align:center">无</td>
<td style="text-align:center">undefined</td>
</tr>
<tr>
<td style="text-align:center">Object</td>
<td style="text-align:center">任何对象</td>
<td style="text-align:center">null</td>
</tr>
<tr>
<td style="text-align:center">String</td>
<td style="text-align:center">任何非空字符串</td>
<td style="text-align:center">&quot;&quot;(空字符串)</td>
</tr>
</tbody>
</table>
<h2 id="number">Number()</h2>
<ul>
<li>如果是<code>null</code>,转化为<code>0</code></li>
<li>如果是<code>undefined</code> ,转化为NaN</li>
<li>如果是bool值,<code>true</code>转化为<code>1</code>,<code>false</code>转化为<code>0</code></li>
<li>如果是字符串
<ul>
<li>如果字符串中只包含数字(包括前面带正号和负号的情况)，将其转化为十进制数值（前导0会被忽略）</li>
<li>如果字符串中包含有效的浮点格式，会将其转化为对应的浮点数（前导0会被忽略）</li>
<li>如果字符串中包含有效的十六进制格式，会将其转化为同样大小的十进制整数值</li>
<li>如果是空字符串会转化为0</li>
<li>如果上述字符串中包含出上述格式外的所有字符，都会被转化为NaN</li>
</ul>
</li>
<li>如果是对象，首先会调用对象的<code>valueOf()</code>方法，然后对返回的值进行上述规则的转换，如果得到的值为NaN，则会调用对象的toString()方法，然后按照前面的规则转换得到的字符串</li>
</ul>
]]></content>
    </entry>
</feed>